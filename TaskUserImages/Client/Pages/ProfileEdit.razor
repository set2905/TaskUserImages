@page "/Profile/Edit"
@using Microsoft.AspNetCore.Authorization;
@using TaskUserImages.Client.API;
@inject IImageFriendsAPI api
@attribute [Authorize]

<h3>ProfileEdit</h3>
<MudFileUpload T="IReadOnlyList<IBrowserFile>" AppendMultipleFiles Accept=".png, .jpg" FilesChanged="UploadFiles">
    <ButtonTemplate>
        <MudPaper Height="300px" Outlined="true" Class="@DragClass">
            <MudText Typo="Typo.h6">Drag file or click here</MudText>
            @foreach (var img in existingImages)
            {
                <MudImage Height="100" Src="@img.Url" />
            }
        </MudPaper>
    </ButtonTemplate>
</MudFileUpload>

<MudButton OnClick="SendFilesToServer">Send</MudButton>


@code {
    private static string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string DragClass = DefaultDragClass;

    IList<IBrowserFile> files = new List<IBrowserFile>();

    private void UploadFiles(IReadOnlyList<IBrowserFile> files)
    {
        foreach (var file in files)
        {
            this.files.Add(file);
        }
    }

    //Лучше бы Task WhenAll?
    private async Task SendFilesToServer()
    {
        foreach (var file in files)
        {
            using (Stream stream = file.OpenReadStream())
            {
                byte[] buffer = new byte[file.Size];
                int length = await stream.ReadAsync(buffer);
                await api.UploadImage(new(buffer));
            }
        }
    }
}
