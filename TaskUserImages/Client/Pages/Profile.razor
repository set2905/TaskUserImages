@page "/Profile/{UserName}"
@using Refit;
@using TaskUserImages.Client.API;
@inject IImageFriendsAPI api
@inject ISnackbar snackBar

<PageTitle>Profile</PageTitle>

<MudGrid Justify="Justify.Center">

    <MudItem xs="12" md="6" Class="my-4">
        <MudStack Row="true" Justify="Justify.FlexStart" AlignItems="AlignItems.Start">
            @if (isFriend!=null)
            {
                @if (isFriend == true)
                {
                    <MudText>
                        This user is your friend!
                    </MudText>
                }
                else
                {
                    <MudText>
                        This user is NOT your friend!
                    </MudText>
                }
            }
            @if (isFriend==false&&isFriendRequestPending==false)
            {
                <AddFriendButton Username="@UserName" OnRequestSent="@InitializeFriend" />

            }
            @if (isFriendRequestPending == true)
            {
                <MudText>
                    You sent friend request to this user
                </MudText>
            }
        </MudStack>

        @foreach (var img in existingImages)
        {
            <MudImage Height="100" Src="@img" />
        }
    </MudItem>

</MudGrid>

@code {
    [Parameter]
    public string UserName { get; set; } = string.Empty;
    public bool? isFriend;
    public bool? isFriendRequestPending;
    private List<string> existingImages = new();


    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        await InitializeFriend();

    }
    private async Task InitializeFriend()
    {
        if (UserName == null) return;
        isFriendRequestPending = await api.IsRequestPending(UserName);
        if (isFriendRequestPending==false)
        {
            isFriend = await api.IsFriend(UserName);
        }
        try
        {
            existingImages = await api.GetUserImageUrls(UserName);
        }
        catch (ApiException ex)
        {
            snackBar.Add("Cant get user images: " + ex.Message);
        }

    }
}

