@page "/Profile/{UserName}"
@using TaskUserImages.Client.API;
@inject IImageFriendsAPI api
@inject ISnackbar snackBar

<PageTitle>Profile</PageTitle>
@if (isFriend!=null)
{
    <MudText>
        @isFriend
    </MudText>
}
@if (isFriend==true)
{
    @foreach (var img in existingImages)
    {
        <MudImage Height="100" Src="@img" />
    }
}
@if (isFriend==false&&isFriendRequestPending==false)
{
    <AddFriendButton Username="@UserName" OnRequestSent="@InitializeFriend" />

}
@if (isFriendRequestPending == true)
{
    <MudText>
        You sent friend request to this user
    </MudText>
}

@code {
    [Parameter]
    public string UserName { get; set; } = string.Empty;
    public bool? isFriend;
    public bool? isFriendRequestPending;
    private List<string> existingImages = new();


    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        await InitializeFriend();

    }
    private async Task InitializeFriend()
    {
        if (UserName == null) return;
        isFriendRequestPending = await api.IsRequestPending(UserName);
        if (isFriendRequestPending==false)
        {
            isFriend = await api.IsFriend(UserName);
            if (isFriend==true)
                existingImages = await api.GetUserImageUrls(UserName);
        }
    }
}

